// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using EF_AdvectureWorks.Models;
using EF_AdvectureWorks.Models.dboSchema;
using EF_AdvectureWorks.Models.HumanResourcesSchema;
using EF_AdvectureWorks.Models.PersonSchema;
using EF_AdvectureWorks.Models.ProductionSchema;
using EF_AdvectureWorks.Models.PurchasingSchema;
using EF_AdvectureWorks.Models.SalesSchema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace EF_AdvectureWorks.Models.Configurations
{
    public partial class BillOfMaterialsConfiguration : IEntityTypeConfiguration<BillOfMaterials>
    {
        public void Configure(EntityTypeBuilder<BillOfMaterials> entity)
        {
            entity.HasKey(e => e.BillOfMaterialsId)
            .HasName("PK_BillOfMaterials_BillOfMaterialsID")
            .IsClustered(false);

            entity.ToTable("BillOfMaterials", "Production", tb => tb.HasComment("Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components."));

            entity.HasIndex(e => new { e.ProductAssemblyId, e.ComponentId, e.StartDate }, "AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate")
            .IsUnique()
            .IsClustered();

            entity.HasIndex(e => e.UnitMeasureCode, "IX_BillOfMaterials_UnitMeasureCode");

            entity.Property(e => e.BillOfMaterialsId)
            .HasComment("Primary key for BillOfMaterials records.")
            .HasColumnName("BillOfMaterialsID");
            entity.Property(e => e.Bomlevel)
            .HasComment("Indicates the depth the component is from its parent (AssemblyID).")
            .HasColumnName("BOMLevel");
            entity.Property(e => e.ComponentId)
            .HasComment("Component identification number. Foreign key to Product.ProductID.")
            .HasColumnName("ComponentID");
            entity.Property(e => e.EndDate)
            .HasComment("Date the component stopped being used in the assembly item.")
            .HasColumnType("datetime");
            entity.Property(e => e.ModifiedDate)
            .HasDefaultValueSql("(getdate())")
            .HasComment("Date and time the record was last updated.")
            .HasColumnType("datetime");
            entity.Property(e => e.PerAssemblyQty)
            .HasDefaultValueSql("((1.00))")
            .HasComment("Quantity of the component needed to create the assembly.")
            .HasColumnType("decimal(8, 2)");
            entity.Property(e => e.ProductAssemblyId)
            .HasComment("Parent product identification number. Foreign key to Product.ProductID.")
            .HasColumnName("ProductAssemblyID");
            entity.Property(e => e.StartDate)
            .HasDefaultValueSql("(getdate())")
            .HasComment("Date the component started being used in the assembly item.")
            .HasColumnType("datetime");
            entity.Property(e => e.UnitMeasureCode)
            .HasMaxLength(3)
            .IsFixedLength()
            .HasComment("Standard code identifying the unit of measure for the quantity.");

            entity.HasOne(d => d.Component).WithMany(p => p.BillOfMaterialsComponent)
            .HasForeignKey(d => d.ComponentId)
            .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.ProductAssembly).WithMany(p => p.BillOfMaterialsProductAssembly).HasForeignKey(d => d.ProductAssemblyId);

            entity.HasOne(d => d.UnitMeasureCodeNavigation).WithMany(p => p.BillOfMaterials)
            .HasForeignKey(d => d.UnitMeasureCode)
            .OnDelete(DeleteBehavior.ClientSetNull);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<BillOfMaterials> entity);
    }
}
