// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using EF_AdvectureWorks.Models;
using EF_AdvectureWorks.Models.dboSchema;
using EF_AdvectureWorks.Models.HumanResourcesSchema;
using EF_AdvectureWorks.Models.PersonSchema;
using EF_AdvectureWorks.Models.ProductionSchema;
using EF_AdvectureWorks.Models.PurchasingSchema;
using EF_AdvectureWorks.Models.SalesSchema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace EF_AdvectureWorks.Models.Configurations
{
    public partial class CurrencyRateConfiguration : IEntityTypeConfiguration<CurrencyRate>
    {
        public void Configure(EntityTypeBuilder<CurrencyRate> entity)
        {
            entity.HasKey(e => e.CurrencyRateId).HasName("PK_CurrencyRate_CurrencyRateID");

            entity.ToTable("CurrencyRate", "Sales", tb => tb.HasComment("Currency exchange rates."));

            entity.HasIndex(e => new { e.CurrencyRateDate, e.FromCurrencyCode, e.ToCurrencyCode }, "AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode").IsUnique();

            entity.Property(e => e.CurrencyRateId)
            .HasComment("Primary key for CurrencyRate records.")
            .HasColumnName("CurrencyRateID");
            entity.Property(e => e.AverageRate)
            .HasComment("Average exchange rate for the day.")
            .HasColumnType("money");
            entity.Property(e => e.CurrencyRateDate)
            .HasComment("Date and time the exchange rate was obtained.")
            .HasColumnType("datetime");
            entity.Property(e => e.EndOfDayRate)
            .HasComment("Final exchange rate for the day.")
            .HasColumnType("money");
            entity.Property(e => e.FromCurrencyCode)
            .HasMaxLength(3)
            .IsFixedLength()
            .HasComment("Exchange rate was converted from this currency code.");
            entity.Property(e => e.ModifiedDate)
            .HasDefaultValueSql("(getdate())")
            .HasComment("Date and time the record was last updated.")
            .HasColumnType("datetime");
            entity.Property(e => e.ToCurrencyCode)
            .HasMaxLength(3)
            .IsFixedLength()
            .HasComment("Exchange rate was converted to this currency code.");

            entity.HasOne(d => d.FromCurrencyCodeNavigation).WithMany(p => p.CurrencyRateFromCurrencyCodeNavigation)
            .HasForeignKey(d => d.FromCurrencyCode)
            .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.ToCurrencyCodeNavigation).WithMany(p => p.CurrencyRateToCurrencyCodeNavigation)
            .HasForeignKey(d => d.ToCurrencyCode)
            .OnDelete(DeleteBehavior.ClientSetNull);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CurrencyRate> entity);
    }
}
