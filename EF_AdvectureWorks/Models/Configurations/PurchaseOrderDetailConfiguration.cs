// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using EF_AdvectureWorks.Models;
using EF_AdvectureWorks.Models.dboSchema;
using EF_AdvectureWorks.Models.HumanResourcesSchema;
using EF_AdvectureWorks.Models.PersonSchema;
using EF_AdvectureWorks.Models.ProductionSchema;
using EF_AdvectureWorks.Models.PurchasingSchema;
using EF_AdvectureWorks.Models.SalesSchema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace EF_AdvectureWorks.Models.Configurations
{
    public partial class PurchaseOrderDetailConfiguration : IEntityTypeConfiguration<PurchaseOrderDetail>
    {
        public void Configure(EntityTypeBuilder<PurchaseOrderDetail> entity)
        {
            entity.HasKey(e => new { e.PurchaseOrderId, e.PurchaseOrderDetailId }).HasName("PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID");

            entity.ToTable("PurchaseOrderDetail", "Purchasing", tb =>
            {
                tb.HasComment("Individual products associated with a specific purchase order. See PurchaseOrderHeader.");
                tb.HasTrigger("iPurchaseOrderDetail");
                tb.HasTrigger("uPurchaseOrderDetail");
            });

            entity.HasIndex(e => e.ProductId, "IX_PurchaseOrderDetail_ProductID");

            entity.Property(e => e.PurchaseOrderId)
            .HasComment("Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.")
            .HasColumnName("PurchaseOrderID");
            entity.Property(e => e.PurchaseOrderDetailId)
            .ValueGeneratedOnAdd()
            .HasComment("Primary key. One line number per purchased product.")
            .HasColumnName("PurchaseOrderDetailID");
            entity.Property(e => e.DueDate)
            .HasComment("Date the product is expected to be received.")
            .HasColumnType("datetime");
            entity.Property(e => e.LineTotal)
            .HasComputedColumnSql("(isnull([OrderQty]*[UnitPrice],(0.00)))", false)
            .HasComment("Per product subtotal. Computed as OrderQty * UnitPrice.")
            .HasColumnType("money");
            entity.Property(e => e.ModifiedDate)
            .HasDefaultValueSql("(getdate())")
            .HasComment("Date and time the record was last updated.")
            .HasColumnType("datetime");
            entity.Property(e => e.OrderQty).HasComment("Quantity ordered.");
            entity.Property(e => e.ProductId)
            .HasComment("Product identification number. Foreign key to Product.ProductID.")
            .HasColumnName("ProductID");
            entity.Property(e => e.ReceivedQty)
            .HasComment("Quantity actually received from the vendor.")
            .HasColumnType("decimal(8, 2)");
            entity.Property(e => e.RejectedQty)
            .HasComment("Quantity rejected during inspection.")
            .HasColumnType("decimal(8, 2)");
            entity.Property(e => e.StockedQty)
            .HasComputedColumnSql("(isnull([ReceivedQty]-[RejectedQty],(0.00)))", false)
            .HasComment("Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.")
            .HasColumnType("decimal(9, 2)");
            entity.Property(e => e.UnitPrice)
            .HasComment("Vendor's selling price of a single product.")
            .HasColumnType("money");

            entity.HasOne(d => d.Product).WithMany(p => p.PurchaseOrderDetail)
            .HasForeignKey(d => d.ProductId)
            .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.PurchaseOrder).WithMany(p => p.PurchaseOrderDetail)
            .HasForeignKey(d => d.PurchaseOrderId)
            .OnDelete(DeleteBehavior.ClientSetNull);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PurchaseOrderDetail> entity);
    }
}
